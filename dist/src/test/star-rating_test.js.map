{"version":3,"file":"star-rating_test.js","sourceRoot":"","sources":["../../../src/test/star-rating_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAE1C,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAC;AAExC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;IACxB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,yCAAyC,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAe,CAAC;QAC5E,MAAM,MAAM,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAC;QACvD,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;KAID,CACA,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAe,CAAC;QAC5E,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {StarRating} from '../star-rating';\r\n\r\nimport {fixture, assert} from '@open-wc/testing';\r\nimport {html} from 'lit/static-html.js';\r\n\r\nsuite('star-rating', () => {\r\n  test('is defined', () => {\r\n    const el = document.createElement('star-rating');\r\n    assert.instanceOf(el, StarRating);\r\n  });\r\n\r\n  test('renders with default values', async () => {\r\n    const el = await fixture(html`<star-rating></star-rating>`);\r\n    assert.shadowDom.equal(\r\n      el,\r\n      `\r\n      <h1>Hello, World!</h1>\r\n      <button part=\"button\">Click Count: 0</button>\r\n      <slot></slot>\r\n    `\r\n    );\r\n  });\r\n\r\n  test('renders with a set name', async () => {\r\n    const el = await fixture(html`<star-rating name=\"Test\"></star-rating>`);\r\n    assert.shadowDom.equal(\r\n      el,\r\n      `\r\n      <h1>Hello, Test!</h1>\r\n      <button part=\"button\">Click Count: 0</button>\r\n      <slot></slot>\r\n    `\r\n    );\r\n  });\r\n\r\n  test('handles a click', async () => {\r\n    const el = (await fixture(html`<star-rating></star-rating>`)) as StarRating;\r\n    const button = el.shadowRoot!.querySelector('button')!;\r\n    button.click();\r\n    await el.updateComplete;\r\n    assert.shadowDom.equal(\r\n      el,\r\n      `\r\n      <h1>Hello, World!</h1>\r\n      <button part=\"button\">Click Count: 1</button>\r\n      <slot></slot>\r\n    `\r\n    );\r\n  });\r\n\r\n  test('styling applied', async () => {\r\n    const el = (await fixture(html`<star-rating></star-rating>`)) as StarRating;\r\n    await el.updateComplete;\r\n    assert.equal(getComputedStyle(el).paddingTop, '16px');\r\n  });\r\n});\r\n"]}